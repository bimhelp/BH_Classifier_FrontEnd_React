{"version":3,"file":"static/js/745.b57b06b9.chunk.js","mappings":"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","sources":["webpack://classifier/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LogInPage/LogInPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"LoginForm_formWrapper__Sc8W5\",\"form\":\"LoginForm_form__gPEx5\",\"inputWrapper\":\"LoginForm_inputWrapper__jO1zg\",\"label\":\"LoginForm_label__F7sLE\",\"input\":\"LoginForm_input__aQRtt\",\"submitBtn\":\"LoginForm_submitBtn__O3h3k\",\"loginBtn\":\"LoginForm_loginBtn__ds2GS\"};","import styled from \"styled-components\";\n\nimport { Form, Field } from \"formik\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledForm = styled(Form)`\n  width: 300px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  align-items: center;\n`;\n\nexport const InputWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nexport const Input = styled(Field)`\n  background-color: ${(props) => props.theme.colors.backgroundWhite};\n  border: ${(props) => props.theme.borders.bold};\n  border-color: ${({ bordercolor }) => bordercolor};\n  border-radius: ${(props) => props.theme.radii.normal};\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  /* padding: 12px 12px 12px 40px; */\n  padding: 4px;\n  color: ${(props) => props.theme.colors.black};\n\n  @media screen and (min-width: 480px) {\n    font-size: 14px;\n    padding: 8px;\n  }\n\n  &:hover,\n  &:focus {\n    border: ${(props) => props.theme.borders.bold};\n    /* background-color: ${(props) => props.theme.colors.backgroundWhite}; */\n    border-color: ${({ bordercolor }) => bordercolor};\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: ${(props) => props.theme.colors.black};\n  &:hover,\n  &:focus {\n    color: ${(props) => props.theme.colors.hover};\n  }\n`;\n\nexport const Label = styled.label``;\n\nexport const ErrorMessageStyled = styled.div`\n  color: ${(props) => props.theme.colors.invalid};\n  position: absolute;\n  right: 0;\n`;\n\nexport const FormButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  padding-top: 10px;\n  padding-bottom: 20px;\n  @media screen and (min-width: 480px) {\n    padding-top: 20px;\n    padding-bottom: 20px;\n  }\n`;\n","import React, { useContext } from \"react\";\nimport { Formik, ErrorMessage } from \"formik\";\nimport * as yup from \"yup\";\n// Навігація\nimport { Button } from \"../Button/Button\";\nimport css from \"./LoginForm.module.css\";\nimport {\n  StyledForm,\n  Input,\n  InputWrapper,\n  StyledLink,\n  ErrorMessageStyled,\n  FormButtonWrapper,\n} from \"./LoginForm.styled\";\nimport { validationColor } from \"../../services/utility\";\nimport { authContext as context } from \"../../context/authContext\";\n\nconst LoginForm = () => {\n  const { onLogIn } = useContext(context);\n\n  const initialValues = {\n    email: \"\",\n    password: \"\",\n  };\n\n  const loginSchema = yup.object().shape({\n    email: yup.string().email(\"Invalid email\").required(\"Required\"),\n    password: yup\n      .string()\n      .required(\"No password provided.\")\n      .min(6, \"Password is too short - should be 6 chars minimum.\"),\n  });\n\n  const handleSubmit = (values, actions) => {\n    const { resetForm } = actions;\n    // console.log(\"values: \", values);\n    // console.log(\"actions: \", actions);\n\n    // Передача даних в контекст (глобальний стейт)\n    onLogIn(values);\n\n    // Очистка форми\n    resetForm();\n    // console.log(\"форма очищена\");\n  };\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={loginSchema}\n        onSubmit={handleSubmit}\n      >\n        {(props) => (\n          <StyledForm>\n            <h2>LogIn</h2>\n            <InputWrapper>\n              <label htmlFor=\"email\" className={css.label}>\n                Email\n              </label>\n              <Input\n                name=\"email\"\n                type=\"email\"\n                id=\"email\"\n                autoFocus\n                bordercolor={validationColor(\n                  props.errors.email,\n                  props.values.email,\n                  \"rgb(0, 0, 0)\"\n                )}\n              />\n              <ErrorMessage\n                name=\"email\"\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\n              />\n            </InputWrapper>\n            <InputWrapper>\n              <label htmlFor=\"password\" className={css.label}>\n                Password\n              </label>\n              <Input\n                name=\"password\"\n                type=\"password\"\n                id=\"password\"\n                bordercolor={validationColor(\n                  props.errors.password,\n                  props.values.password,\n                  \"rgb(0, 0, 0)\"\n                )}\n              />\n              <ErrorMessage\n                name=\"password\"\n                render={(msg) => <ErrorMessageStyled>{msg}</ErrorMessageStyled>}\n              />\n            </InputWrapper>\n            <FormButtonWrapper>\n              <Button type=\"submit\">LogIn</Button>\n              <StyledLink to={\"/registration\"}>Registration</StyledLink>\n            </FormButtonWrapper>\n          </StyledForm>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport Section from \"../../components/Section/Section\";\nimport LoginForm from \"../../components/LoginForm/LoginForm\";\n// import GoogleLoginBtn from \"../../components/GoogleLoginBtn/GoogleLoginBtn\";\n\nconst LogInPage = () => {\n  return (\n    <Section>\n      <LoginForm />\n      {/* <GoogleLoginBtn />  Вимкнено поки не налаштовано в плагіні*/}\n    </Section>\n  );\n};\n\nexport default LogInPage;\n"],"names":["StyledForm","styled","Form","InputWrapper","div","Input","Field","props","theme","colors","backgroundWhite","borders","bold","_ref","bordercolor","radii","normal","black","_ref2","StyledLink","NavLink","hover","ErrorMessageStyled","label","invalid","FormButtonWrapper","LoginForm","onLogIn","useContext","context","loginSchema","yup","shape","email","required","password","min","_jsx","_Fragment","children","Formik","initialValues","validationSchema","onSubmit","handleSubmit","values","actions","resetForm","_jsxs","htmlFor","className","css","name","type","id","autoFocus","validationColor","errors","ErrorMessage","render","msg","Button","to","LogInPage","Section"],"sourceRoot":""}